version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - my-microservices-app_default

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_MESSAGE_MAX_BYTES: 20000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 20000000
      KAFKA_MAX_REQUEST_SIZE: 20000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 20000000
      KAFKA_FETCH_MAX_BYTES: 20000000
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - my-microservices-app_default
    depends_on:
      - zookeeper

  ServiceUtilisateur:
    build:
      context: ./serviceutilisateur
      dockerfile: DockerFile.ServiceUtilisateur
    image: serviceutilisateur:latest
    ports:
      - "8007:8007"
    environment:
      - PORT=8007
      - KAFKA_BROKER=kafka:9092
      - KAFKA_MESSAGE_MAX_BYTES=20000000
      - KAFKA_FETCH_MAX_BYTES=20000000
    networks:
      - my-microservices-app_default
    depends_on:
      - kafka

  ServiceProfilMusical:
    build:
      context: ./serviceprofilmusical
      dockerfile: DockerFile.ServiceProfilMusical
    image: serviceprofilmusical:latest
    ports:
      - "8001:8001"
    environment:
      - PORT=8001
      - KAFKA_BROKER=kafka:9092
      - KAFKA_MESSAGE_MAX_BYTES=20000000
      - KAFKA_FETCH_MAX_BYTES=20000000
    networks:
      - my-microservices-app_default
    depends_on:
      - kafka
      - ServiceUtilisateur

  ServiceEvenements:
    build:
      context: ./serviceevenements
      dockerfile: DockerFile.ServiceEvenements
    image: serviceevenements:latest
    ports:
      - "8003:8003"
    environment:
      - PORT=8003
      - KAFKA_BROKER=kafka:9092
      - KAFKA_MESSAGE_MAX_BYTES=20000000
      - KAFKA_FETCH_MAX_BYTES=20000000
    networks:
      - my-microservices-app_default
    depends_on:
      - kafka
      - ServiceProfilMusical

  reactapp:
    build:
      context: .
      dockerfile: Dockerfile.microserve
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    networks:
      - my-microservices-app_default
    depends_on:
      - ServiceUtilisateur
      - ServiceProfilMusical
      - ServiceEvenements

  kafkacat:
    image: edenhill/kafkacat:1.6.0
    depends_on:
      - kafka
    entrypoint: ["sh", "-c", "echo 'This is a test message' | kafkacat -b kafka:9092 -t testKArim"]
    networks:
      - my-microservices-app_default

networks:
  my-microservices-app_default:
    external: true
